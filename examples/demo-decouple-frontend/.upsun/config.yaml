routes:
  "https://{all}/": { type: upstream, upstream: "frontend:http" }
  "http://{all}/": { type: redirect, to: "https://{all}/" }

services: { }

applications:
  app:
    source:
      root: "/backend"
    type: php:8.3
    runtime:
      extensions:
        - apcu
        - blackfire
        - mbstring
        - pdo_sqlite
        - sodium
        - xsl
    variables:
      php:
        opcache.preload: config/preload.php
    build:
      flavor: none
    web:
      locations:
        "/":
          root: "public"
          expires: 1h
          passthru: "/index.php"
    mounts:
      "/var": { source: storage, source_path: var }
      "/data": { source: storage, source_path: "data" }
    hooks:
      build: |
        set -x -e
        curl -fs https://get.symfony.com/cloud/configurator | bash
        NODE_VERSION=22 symfony-build
      deploy: |
        set -x -e
        symfony-deploy
    crons:
      security-check:
        # Check that no security issues have been found for PHP packages deployed in production
        spec: '50 23 * * *'
        cmd: if [ "$PLATFORM_ENVIRONMENT_TYPE" = "production" ]; then croncape COMPOSER_ROOT_VERSION=1.0.0 COMPOSER_AUDIT_ABANDONED=ignore composer audit --no-cache; fi
      clean-expired-sessions:
        spec: '17,47 * * * *'
        cmd: croncape php-session-clean
  frontend:
    source:
      root: "/frontend"
    type: "nodejs:22"
    container_profile: HIGH_MEMORY
    mounts:
      "/.npm":
        source: "storage"
        source_path: "npm"
    hooks:
      build: |
        set -eux
        npm i
        npm run build                
    web:
      commands:
        start: "npx next start -p $PORT"
      upstream:
        socket_family: tcp
      locations:
        "/":
          passthru: true
    relationships:
      api:
        service: "app"
        endpoint: "http"
    variables:
      env:
        NODE_ENV: production